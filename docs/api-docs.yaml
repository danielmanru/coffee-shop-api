openapi: 3.1.0
info:
  title: Coffee Shop API
  description: |
    API documentation for coffee shop API
    
    Source Code : https://github.com/danielmanru/coffee-shop-api
  version: 1.0.0
  contact:
    name: Daniel Manurung
    url: https://www.linkedin.com/in/daniel-manurung/
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: User
  - name: Menu
  - name: Image
  - name: Outlet
  - name: Cart
  - name: Order
  - name: Payment
paths:
  /api/v1/register:
    post:
      summary: User Register
      deprecated: false
      description: ''
      tags:
        - User
      parameters:
        - name: outletId
          in: query
          description: ''
          required: false
          example: 688dedfa1ae112a3e84a8e19
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                role:
                  type: string
              required:
                - name
                - email
                - password
                - phone
                - role
            example:
              name: test user
              email: yiserot148@7tul.com
              password: K5gb#mpg
              phone: '081299998888'
              role: staff
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      email:
                        type: string
                    required:
                      - _id
                      - name
                      - email
                required:
                  - success
                  - message
                  - data
              examples:
                '1':
                  summary: Success Register New User
                  description: ''
                  value:
                    success: true
                    message: User registered successfully
                    data:
                      _id: 688782e4db2c2ccddeb140d7
                      name: test user
                      email: yiserot148@7tul.com
                '4':
                  summary: Success
                  description: ''
                  value:
                    success: true
                    message: User registered successfully
                    data:
                      _id: 6896f7145c1d219ae0e63e11
                      name: test user
                      email: yiserot148@7tul.com
          headers: {}
        '400':
          description: Outlet Id is required for staff registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: outletId is required
          headers: {}
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Email already registered
          headers: {}
      security: []
  /api/v1/users/verifyUser:
    get:
      summary: verify user
      deprecated: false
      description: ''
      tags:
        - User
      parameters:
        - name: token
          in: query
          description: ''
          required: true
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inlpc2Vyb3QxNDhAN3R1bC5jb20iLCJpYXQiOjE3NTM3NzgxMzUsImV4cCI6MTc1Mzg2NDUzNX0.W_QqDI7Y1mD1RAzThXIheJOUY_GHw50NocnVz2xapRc
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: User verified successfully
                data: null
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Your email has been verified.
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security: []
  /api/v1/login:
    post:
      summary: User Login
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            example:
              email: jamode8654@dosonex.com
              password: K5gb#mpg
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties: {}
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Login successfully
                data:
                  _id: 6881f27e816b998b6a75db47
                  refreshToken: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODgxZjI3ZTgxNmI5OThiNmE3NWRiNDciLCJlbWFpbCI6ImphbW9kZTg2NTRAZG9zb25leC5jb20iLCJyb2xlIjoiYWRtaW4iLCJpc1ZlcmlmaWVkIjp0cnVlLCJpYXQiOjE3NTM3MTg1ODcsImV4cCI6MTc1NDMyMzM4N30.WUHx-M417TeJJFluA31tniRyTqg30Hmz33j5Jvmm0v8
                  accessToken: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODgxZjI3ZTgxNmI5OThiNmE3NWRiNDciLCJlbWFpbCI6ImphbW9kZTg2NTRAZG9zb25leC5jb20iLCJyb2xlIjoiYWRtaW4iLCJpc1ZlcmlmaWVkIjp0cnVlLCJpYXQiOjE3NTM3MTg1ODcsImV4cCI6MTc1MzgwNDk4N30.ylVDmZ1JAqBLoj3z2JHg5IVUcC8sWr04cvmEgKzNDuI
          headers: {}
        '401':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Email or password is wrong
          headers: {}
      security: []
  /api/v1/users/user:
    get:
      summary: get user data
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_0
                    $ref: '#/components/schemas/User'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Successfully get user data
                data:
                  _id: 6881f27e816b998b6a75db47
                  name: Jamdoe
                  email: jamode8654@dosonex.com
                  phone: '081299998888'
                  location: null
                  role: admin
                  isVerified: true
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security:
        - bearer: []
  /api/v1/users/sendVerificationEmail:
    get:
      summary: send verification email
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                  - status
                  - message
              example:
                status: PENDING
                message: An verification email is being sent to your email!
          headers: {}
      security:
        - bearer: []
  /api/v1/users/refreshToken:
    get:
      summary: get new access token
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  accessToken:
                    type: string
                required:
                  - success
                  - message
                  - accessToken
              example:
                success: true
                message: New access token generated successfully
                accessToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inlpc2Vyb3QxNDhAN3R1bC5jb20iLCJyb2xlIjoic3RhZmYiLCJpYXQiOjE3NTM3Nzg0NTYsImV4cCI6MTc1Mzg2NDg1Nn0.A35u-8GCghi2l5eRO99WLW02xD-tgl9PIUds5rFu9qs
          headers: {}
      security:
        - bearer: []
  /api/v1/users/changePassword:
    put:
      summary: change password
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - currentPassword
                - newPassword
            example:
              currentPassword: M5gb#mpg
              newPassword: K5gb#mpg
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      refreshToken:
                        type: string
                    required:
                      - _id
                      - refreshToken
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Successfully change password
                data:
                  _id: 688782e4db2c2ccddeb140d7
                  refreshToken: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inlpc2Vyb3QxNDhAN3R1bC5jb20iLCJyb2xlIjoic3RhZmYiLCJpc1ZlcmlmaWVkIjp0cnVlLCJpYXQiOjE3NTM3NzkzMzcsImV4cCI6MTc1NDM4NDEzN30.nAhKslkggFpJ8MqPMq7rWZ8uZU-s2TbpowlgxEG_uD8
          headers: {}
        '401':
          description: Showed if current password doesn't match with user password
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: password is wrong
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security:
        - bearer: []
  /api/v1/forgetPassword:
    post:
      summary: forget password
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
            example:
              email: manurungd025@gmail.com
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                required:
                  - status
                  - message
              example:
                status: PENDING
                message: A reset password link is being sent to your email!
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security: []
  /api/v1/users/resetPassword:
    put:
      summary: reset password
      deprecated: false
      description: ''
      tags:
        - User
      parameters:
        - name: token
          in: query
          description: ''
          required: true
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1hbnVydW5nZDAyNUBnbWFpbC5jb20iLCJpYXQiOjE3NTEyOTUxNDMsImV4cCI6MTc1MTI5NTc0M30.L7rogAgzRcLxPytysT7p9qeKXVhzcXnXB-huDpY75oA
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                confirmNewPassword:
                  type: string
              required:
                - newPassword
                - confirmNewPassword
            example:
              newPassword: M5gb#mpg
              confirmNewPassword: M5gb#mpg
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Password reset successfully
                data: null
          headers: {}
        '400':
          description: New password and confirm password is different!
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: New password and confirm password is different!
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security: []
  /api/v1/users/updateUserDetail:
    put:
      summary: update user detail
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phone:
                  type: string
                location:
                  type: object
                  properties:
                    alamat:
                      type: string
                    kecamatan:
                      type: string
                    kelurahan:
                      type: string
                    kota:
                      type: string
                  required:
                    - alamat
                    - kecamatan
                    - kelurahan
                    - kota
              required:
                - name
                - phone
                - location
            example:
              name: Daniel Manurung
              phone: '081299998888'
              location:
                alamat: JL Tester No. 1
                kecamatan: tester barat
                kelurahan: tester kota
                kota: tester
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_0
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Successfully update user data
                data:
                  _id: 688782e4db2c2ccddeb140d7
                  name: Daniel Manurung
                  email: yiserot148@7tul.com
                  phone: '081299998888'
                  location:
                    alamat: JL Tester No. 1
                    kecamatan: tester barat
                    kelurahan: tester kota
                    kota: tester
                  role: staff
                  isVerified: true
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security:
        - bearer: []
  /api/v1/users/logout:
    put:
      summary: Logout
      deprecated: false
      description: ''
      tags:
        - User
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: User successfully logged out
                data: null
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User is not found
          headers: {}
      security:
        - bearer: []
  /api/v1/menus/addMenu:
    post:
      summary: add menu
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                isAvailable:
                  type: boolean
                variants:
                  type: array
                  items:
                    type: object
                    properties:
                      size:
                        type: string
                      price:
                        type: integer
                    required:
                      - size
                      - price
              required:
                - name
                - description
                - category
                - isAvailable
                - variants
            example:
              name: Sanger
              description: Kopi sanger nyaman diminum
              category: coffee
              isAvailable: true
              variants:
                - size: small
                  price: 12000
                - size: regular
                  price: 15000
                - size: large
                  price: 18000
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_1
                    $ref: '#/components/schemas/Menu'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success create menu
                data:
                  name: Kopi Susu Gula Aren
                  description: Kopi Susu Gula Aren nikmat nyaman diminum
                  category: coffee
                  isAvailable: true
                  variants:
                    - size: small
                      price: 12000
                    - size: regular
                      price: 15000
                    - size: large
                      price: 18000
                  _id: 6889e187ef13a242d64af679
                  images: []
                  createdAt: '2025-07-30T09:10:31.470Z'
                  updatedAt: '2025-07-30T09:10:31.470Z'
          headers: {}
        '400':
          description: Throw error if given menu name is already exists in database
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Menu already exists!
          headers: {}
      security:
        - bearer: []
  /api/v1/menus/:
    get:
      summary: Get all menus
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get all menus
                data:
                  - _id: 6889de6dcdf79b72717f3651
                    name: Sanger
                    description: Kopi sanger nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 12000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T08:57:17.297Z'
                    updatedAt: '2025-07-30T08:57:17.297Z'
                  - _id: 6889e187ef13a242d64af679
                    name: Kopi Susu Gula Aren
                    description: Kopi Susu Gula Aren nikmat nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 12000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T09:10:31.470Z'
                    updatedAt: '2025-07-30T09:10:31.470Z'
          headers: {}
      security: []
  /api/v1/menus/getMenuByCategory/{menuCategory}:
    get:
      summary: Get menu by category
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters:
        - name: menuCategory
          in: path
          description: ''
          required: true
          example: coffee
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get menu with category coffee
                data:
                  - _id: 6889e5629c4de3dc92ca1bb6
                    name: Sanger
                    description: Sanger nikmat nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 12000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T09:26:58.045Z'
                    updatedAt: '2025-07-30T09:26:58.045Z'
                  - _id: 6889e5889c4de3dc92ca1bb9
                    name: Kopi Susu Gula Aren
                    description: Kopi Susu Gula Aren nikmat nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 12000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T09:27:36.497Z'
                    updatedAt: '2025-07-30T09:27:36.497Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Menus with category food are not found!
          headers: {}
      security: []
  /api/v1/menus/getMenuById/{menuId}:
    get:
      summary: Get menu by id
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters:
        - name: menuId
          in: path
          description: ''
          required: true
          example: 6862b3d15b841c86d2274275
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get menu with id6889e5629c4de3dc92ca1bb6
                data:
                  _id: 6889e5629c4de3dc92ca1bb6
                  name: Sanger
                  description: Sanger nikmat nyaman diminum
                  category: coffee
                  isAvailable: true
                  variants:
                    - size: small
                      price: 12000
                    - size: regular
                      price: 15000
                    - size: large
                      price: 18000
                  images: []
                  createdAt: '2025-07-30T09:26:58.045Z'
                  updatedAt: '2025-07-30T09:26:58.045Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Menu is not found!
          headers: {}
      security: []
  /api/v1/menus/getAvailableMenu:
    get:
      summary: Get Available Menu
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get available menu
                data:
                  - _id: 6889e5629c4de3dc92ca1bb6
                    name: Sanger
                    description: Sanger nikmat nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 12000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T09:26:58.045Z'
                    updatedAt: '2025-07-30T09:26:58.045Z'
                  - _id: 6889e5889c4de3dc92ca1bb9
                    name: Kopi Susu Gula Aren
                    description: Kopi nikmat nyaman diminum
                    category: coffee
                    isAvailable: true
                    variants:
                      - size: small
                        price: 10000
                      - size: regular
                        price: 15000
                      - size: large
                        price: 18000
                    images: []
                    createdAt: '2025-07-30T09:27:36.497Z'
                    updatedAt: '2025-07-30T10:39:18.093Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: All menus are unavailable!
          headers: {}
      security: []
  /api/v1/menus/updateMenu:
    put:
      summary: Update menu
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters:
        - name: menuId
          in: query
          description: ''
          required: true
          example: 6889e5889c4de3dc92ca1bb9
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                isAvailable:
                  type: boolean
                variants:
                  type: array
                  items:
                    type: object
                    properties:
                      size:
                        type: string
                      price:
                        type: integer
                    required:
                      - size
                      - price
              required:
                - name
                - description
                - category
                - isAvailable
                - variants
            example:
              name: Kopi Susu Gula Aren
              description: Kopi nikmat nyaman diminum
              category: coffee
              isAvailable: true
              variants:
                - size: small
                  price: 10000
                - size: regular
                  price: 15000
                - size: large
                  price: 18000
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success update menu
                data:
                  _id: 6889e5889c4de3dc92ca1bb9
                  name: Kopi Susu Gula Aren
                  description: Kopi nikmat nyaman diminum
                  category: coffee
                  isAvailable: true
                  variants:
                    - size: small
                      price: 10000
                    - size: regular
                      price: 15000
                    - size: large
                      price: 18000
                  images: []
                  createdAt: '2025-07-30T09:27:36.497Z'
                  updatedAt: '2025-07-30T10:39:18.093Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Menu is not found!
          headers: {}
      security:
        - bearer: []
  /api/v1/menus/deleteMenu:
    delete:
      summary: Delete Menu
      deprecated: false
      description: ''
      tags:
        - Menu
      parameters:
        - name: menuId
          in: query
          description: ''
          required: true
          example: 6889e5889c4de3dc92ca1bb9
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success delete menu
                data: null
          headers: {}
      security:
        - bearer: []
  /api/v1/images/addImage/for/{uploadFor}:
    post:
      summary: add image
      deprecated: false
      description: ''
      tags:
        - Image
      parameters:
        - name: uploadFor
          in: path
          description: Only for Menu and Outlet
          required: true
          example: Menu
          schema:
            type: string
        - name: documentId
          in: query
          description: ''
          required: true
          example: 6889e5629c4de3dc92ca1bb6
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  format: binary
                  type: string
                  example:
                    - >-
                      file://D:\Project\NodeJS\coffee-shop-api\tests\test-assets\Caramel
                      Machiato 1.png
                    - >-
                      file://D:\Project\NodeJS\coffee-shop-api\tests\test-assets\Caramel
                      Machiato 2.png
            examples: {}
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Image added successfully
                data:
                  _id: 6889e5629c4de3dc92ca1bb6
                  name: Sanger
                  description: Sanger nikmat nyaman diminum
                  category: coffee
                  isAvailable: true
                  variants:
                    - size: small
                      price: 12000
                    - size: regular
                      price: 15000
                    - size: large
                      price: 18000
                  images:
                    - url: >-
                        https://res.cloudinary.com/df9r7fwib/image/upload/v1753951610/coffee_shop_assets/menu-assets/file_qqhe9g.png
                      publicId: coffee_shop_assets/menu-assets/file_qqhe9g
                    - url: >-
                        https://res.cloudinary.com/df9r7fwib/image/upload/v1753951610/coffee_shop_assets/menu-assets/file_qh3z76.png
                      publicId: coffee_shop_assets/menu-assets/file_qh3z76
                  createdAt: '2025-07-30T09:26:58.045Z'
                  updatedAt: '2025-07-31T08:46:47.117Z'
          headers: {}
        x-201-2:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_2
                    $ref: '#/components/schemas/Outlet'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Image added successfully
                data:
                  _id: 688b2fb35d1b065701bf9860
                  name: Gatot Subroto Medan
                  location:
                    alamat: Jl. Gatot Subroto No. 114
                    kecamatan: Medan Maimun
                    kelurahan: Maimun
                  openingHours:
                    open: '08:00'
                    close: '22:00'
                  isActive: true
                  images:
                    - url: >-
                        https://res.cloudinary.com/df9r7fwib/image/upload/v1753952521/coffee_shop_assets/outlet-assets/file_ax7fgb.png
                      publicId: coffee_shop_assets/outlet-assets/file_ax7fgb
                  staff:
                    - staffId: 688b30125d1b065701bf9864
                      isActive: true
                  createdAt: '2025-07-31T08:56:19.074Z'
                  updatedAt: '2025-07-31T09:01:57.646Z'
          headers: {}
      security:
        - bearer: []
  /api/v1/images/deleteImage/for/{deleteFor}:
    put:
      summary: Delete Image
      deprecated: false
      description: ''
      tags:
        - Image
      parameters:
        - name: deleteFor
          in: path
          description: ''
          required: true
          example: Menu
          schema:
            type: string
        - name: documentId
          in: query
          description: ''
          required: true
          example: 6889e5629c4de3dc92ca1bb6
          schema:
            type: string
        - name: publicIds
          in: query
          description: Separate publicIds with "," for multiple item deletion
          required: true
          example: >-
            coffee_shop_assets/menu-assets/file_wfeslv,coffee_shop_assets/menu-assets/file_zzcsrc
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_1
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Image deleted successfully
                data:
                  _id: 6889e5629c4de3dc92ca1bb6
                  name: Sanger
                  description: Sanger nikmat nyaman diminum
                  category: coffee
                  isAvailable: true
                  variants:
                    - size: small
                      price: 12000
                    - size: regular
                      price: 15000
                    - size: large
                      price: 18000
                  images: []
                  createdAt: '2025-07-30T09:26:58.045Z'
                  updatedAt: '2025-07-31T09:54:04.002Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: One of PublicIdS is not found!
          headers: {}
        x-200-2:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Image deleted successfully
                data:
                  _id: 688b2fb35d1b065701bf9860
                  name: Gatot Subroto Medan
                  location:
                    alamat: Jl. Gatot Subroto No. 114
                    kecamatan: Medan Maimun
                    kelurahan: Maimun
                  openingHours:
                    open: '08:00'
                    close: '22:00'
                  isActive: true
                  images: []
                  staff:
                    - staffId: 688b30125d1b065701bf9864
                      isActive: true
                  createdAt: '2025-07-31T08:56:19.074Z'
                  updatedAt: '2025-07-31T09:21:50.733Z'
          headers: {}
      security:
        - bearer: []
  /api/v1/outlets/addOutlet:
    post:
      summary: Add New Outlet
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: object
                  properties:
                    alamat:
                      type: string
                    kecamatan:
                      type: string
                    kelurahan:
                      type: string
                  required:
                    - alamat
                    - kecamatan
                    - kelurahan
                openingHours:
                  type: object
                  properties:
                    open:
                      type: string
                    close:
                      type: string
                  required:
                    - open
                    - close
                isActive:
                  type: boolean
              required:
                - name
                - location
                - openingHours
                - isActive
            example:
              name: Gatot Subroto Medan
              location:
                alamat: Jl. Gatot Subroto No. 114
                kecamatan: Medan Maimun
                kelurahan: Maimun
              openingHours:
                open: '08:00'
                close: '22:00'
              isActive: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success add new outlet
                data:
                  name: Gatot Subroto Medan
                  location:
                    alamat: Jl. Gatot Subroto No. 114
                    kecamatan: Medan Maimun
                    kelurahan: Maimun
                  openingHours:
                    open: '08:00'
                    close: '22:00'
                  isActive: true
                  _id: 688b2fb35d1b065701bf9860
                  images: []
                  staff: []
                  createdAt: '2025-07-31T08:56:19.074Z'
                  updatedAt: '2025-07-31T08:56:19.074Z'
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Outlet already exists
          headers: {}
      security:
        - bearer: []
  /api/v1/outlets/:
    get:
      summary: Get All Outlets
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get all outlets
                data:
                  - _id: 688decff1ae112a3e84a8e0e
                    name: Gatot Subroto Medan
                    location:
                      alamat: Jl. Gatot Subroto No. 114
                      kecamatan: Medan Maimun
                      kelurahan: Maimun
                    openingHours:
                      open: '08:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:48:31.782Z'
                    updatedAt: '2025-08-02T10:48:31.782Z'
                  - _id: 688deded1ae112a3e84a8e13
                    name: Sisingamangaraja Medan
                    location:
                      alamat: Jl. Sisingamangaraja No. 89
                      kecamatan: Medan Kota
                      kelurahan: Pasar Merah
                    openingHours:
                      open: '08:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:29.455Z'
                    updatedAt: '2025-08-02T10:52:29.455Z'
                  - _id: 688dedf51ae112a3e84a8e16
                    name: Setiabudi Medan
                    location:
                      alamat: Jl. Setiabudi No. 45
                      kecamatan: Medan Selayang
                      kelurahan: Simpang Selayang
                    openingHours:
                      open: '09:00'
                      close: '21:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:37.733Z'
                    updatedAt: '2025-08-02T10:52:37.733Z'
                  - _id: 688dedfa1ae112a3e84a8e19
                    name: Iskandar Muda Medan
                    location:
                      alamat: Jl. Iskandar Muda No. 12A
                      kecamatan: Medan Petisah
                      kelurahan: Petisah Hulu
                    openingHours:
                      open: '10:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:42.846Z'
                    updatedAt: '2025-08-02T10:52:42.846Z'
                  - _id: 688dee011ae112a3e84a8e1c
                    name: Pancing Medan
                    location:
                      alamat: Jl. Pancing No. 101
                      kecamatan: Medan Tembung
                      kelurahan: Bantan
                    openingHours:
                      open: '08:30'
                      close: '21:30'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:49.529Z'
                    updatedAt: '2025-08-02T10:52:49.529Z'
                  - _id: 688dee061ae112a3e84a8e1f
                    name: Ringroad Medan
                    location:
                      alamat: Jl. Ringroad No. 73
                      kecamatan: Medan Sunggal
                      kelurahan: Sunggal
                    openingHours:
                      open: '08:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:54.515Z'
                    updatedAt: '2025-08-02T10:52:54.515Z'
                  - _id: 688dee0b1ae112a3e84a8e22
                    name: AH Nasution Medan
                    location:
                      alamat: Jl. AH Nasution No. 30
                      kecamatan: Medan Johor
                      kelurahan: Titi Kuning
                    openingHours:
                      open: '09:00'
                      close: '21:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:59.155Z'
                    updatedAt: '2025-08-02T10:52:59.155Z'
                  - _id: 688dee101ae112a3e84a8e25
                    name: Kapten Muslim Medan
                    location:
                      alamat: Jl. Kapten Muslim No. 58
                      kecamatan: Medan Helvetia
                      kelurahan: Helvetia Tengah
                    openingHours:
                      open: '10:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:53:04.662Z'
                    updatedAt: '2025-08-02T10:53:04.662Z'
                  - _id: 688dee151ae112a3e84a8e28
                    name: Jamin Ginting Medan
                    location:
                      alamat: Jl. Jamin Ginting No. 140
                      kecamatan: Medan Tuntungan
                      kelurahan: Lau Cih
                    openingHours:
                      open: '08:00'
                      close: '20:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:53:09.935Z'
                    updatedAt: '2025-08-02T10:53:09.935Z'
                  - _id: 688dee1a1ae112a3e84a8e2b
                    name: Letda Sujono Medan
                    location:
                      alamat: Jl. Letda Sujono No. 23
                      kecamatan: Medan Tembung
                      kelurahan: Bantan Timur
                    openingHours:
                      open: '07:30'
                      close: '21:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:53:14.537Z'
                    updatedAt: '2025-08-02T10:53:14.537Z'
                  - _id: 688dee1f1ae112a3e84a8e2e
                    name: Asia Mega Mas Medan
                    location:
                      alamat: Komplek Asia Mega Mas Blok C No. 7
                      kecamatan: Medan Area
                      kelurahan: Sukaramai II
                    openingHours:
                      open: '08:00'
                      close: '22:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:53:19.472Z'
                    updatedAt: '2025-08-02T10:53:19.472Z'
          headers: {}
      security: []
  /api/v1/outlets/searchOutlet:
    get:
      summary: Search Outlet
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters:
        - name: search
          in: query
          description: ''
          required: true
          example: selayang
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get outlet searched
                data:
                  - _id: 688dedf51ae112a3e84a8e16
                    name: Setiabudi Medan
                    location:
                      alamat: Jl. Setiabudi No. 45
                      kecamatan: Medan Selayang
                      kelurahan: Simpang Selayang
                    openingHours:
                      open: '09:00'
                      close: '21:00'
                    isActive: true
                    images: []
                    staff: []
                    createdAt: '2025-08-02T10:52:37.733Z'
                    updatedAt: '2025-08-02T10:52:37.733Z'
                    score: 1.5
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Outlet not found
          headers: {}
      security: []
  /api/v1/outlets/updateOutlet:
    put:
      summary: Update Outlet
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters:
        - name: outletId
          in: query
          description: ''
          required: true
          example: 686bbade9ad15a09ecaae0e2
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                location:
                  type: object
                  properties:
                    alamat:
                      type: string
                    kecamatan:
                      type: string
                    kelurahan:
                      type: string
                  required:
                    - alamat
                    - kecamatan
                    - kelurahan
                openingHours:
                  type: object
                  properties:
                    open:
                      type: string
                    close:
                      type: string
                  required:
                    - open
                    - close
                isActive:
                  type: boolean
              required:
                - name
                - location
                - openingHours
                - isActive
            example:
              name: Gatot Subroto 1 Medan
              location:
                alamat: Jl. Gatot Subroto No. 125
                kecamatan: Medan Maimun
                kelurahan: Maimun
              openingHours:
                open: '08:00'
                close: '22:00'
              isActive: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success Update Outlet with id 688decff1ae112a3e84a8e0e
                data:
                  _id: 688decff1ae112a3e84a8e0e
                  name: Gatot Subroto 1 Medan
                  location:
                    alamat: Jl. Gatot Subroto No. 125
                    kecamatan: Medan Maimun
                    kelurahan: Maimun
                  openingHours:
                    open: '08:00'
                    close: '22:00'
                  isActive: false
                  images: []
                  staff: []
                  createdAt: '2025-08-02T10:48:31.782Z'
                  updatedAt: '2025-08-02T11:07:35.056Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Outlet not found
          headers: {}
      security:
        - bearer: []
  /api/v1/outlets/getOutletById/{outletId}:
    get:
      summary: Get Outlet By Id
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters:
        - name: outletId
          in: path
          description: ''
          required: true
          example: 686bbade9ad15a09ecaae0e2
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_2
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success get outlet with id 688decff1ae112a3e84a8e0e
                data:
                  _id: 688decff1ae112a3e84a8e0e
                  name: Gatot Subroto 1 Medan
                  location:
                    alamat: Jl. Gatot Subroto No. 125
                    kecamatan: Medan Maimun
                    kelurahan: Maimun
                  openingHours:
                    open: '08:00'
                    close: '22:00'
                  isActive: false
                  images: []
                  staff: []
                  createdAt: '2025-08-02T10:48:31.782Z'
                  updatedAt: '2025-08-02T11:07:35.056Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Outlet not found
          headers: {}
      security: []
  /api/v1/outlets/deleteOutlet:
    delete:
      summary: Delete Outlet
      deprecated: false
      description: ''
      tags:
        - Outlet
      parameters:
        - name: outletId
          in: query
          description: ''
          required: true
          example: 686bbade9ad15a09ecaae0e2
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success delete outlet with id 688decff1ae112a3e84a8e0e
                data: null
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Outlet not found
          headers: {}
      security:
        - bearer: []
  /api/v1/cart/user:
    get:
      summary: Get User Cart
      deprecated: false
      description: ''
      tags:
        - Cart
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_3
                    $ref: '#/components/schemas/Cart'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6895f6c56f316d777c040209
                  userId: 6895f6c56f316d777c040207
                  totalPrice: 45000
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fc9d4022cb63f8bb2155
                    - menuId: 6889e187ef13a242d64af679
                      temperature: cold
                      iceLevel: regular_ice
                      variant: regular
                      price: 15000
                      quantity: 1
                      _id: 6895fce64022cb63f8bb215d
                  createdAt: '2025-08-08T13:08:21.777Z'
                  updatedAt: '2025-08-08T13:34:30.978Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Cart not found
          headers: {}
      security:
        - bearer: []
  /api/v1/cart/add:
    post:
      summary: Add New Item To Cart
      deprecated: false
      description: ''
      tags:
        - Cart
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                menuId:
                  type: string
                temperature:
                  type: string
                iceLevel:
                  type: string
                variant:
                  type: string
              required:
                - menuId
                - temperature
                - iceLevel
                - variant
            example:
              menuId: 6889de6dcdf79b72717f3651
              temperature: hot
              iceLevel: no_ice
              variant: regular
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_3
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6895f6c56f316d777c040209
                  userId: 6895f6c56f316d777c040207
                  totalPrice: 45000
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fc9d4022cb63f8bb2155
                    - menuId: 6889e187ef13a242d64af679
                      temperature: cold
                      iceLevel: regular_ice
                      variant: regular
                      price: 15000
                      quantity: 1
                      _id: 6895fce64022cb63f8bb215d
                  createdAt: '2025-08-08T13:08:21.777Z'
                  updatedAt: '2025-08-08T13:34:30.978Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Menu is not found!
          headers: {}
      security:
        - bearer: []
  /api/v1/cart/increase/item/{cartItemId}:
    patch:
      summary: Increase Quantity
      deprecated: false
      description: ''
      tags:
        - Cart
      parameters:
        - name: cartItemId
          in: path
          description: ''
          required: true
          example: 6895fce64022cb63f8bb215d
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_3
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6895f6c56f316d777c040209
                  userId: 6895f6c56f316d777c040207
                  totalPrice: 60000
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fc9d4022cb63f8bb2155
                    - menuId: 6889e187ef13a242d64af679
                      temperature: cold
                      iceLevel: regular_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fce64022cb63f8bb215d
                  createdAt: '2025-08-08T13:08:21.777Z'
                  updatedAt: '2025-08-08T13:46:59.100Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Cart item not found
          headers: {}
      security:
        - bearer: []
  /api/v1/cart/decrease/item/{cartItemId}:
    patch:
      summary: Decrease Quantity
      deprecated: false
      description: ''
      tags:
        - Cart
      parameters:
        - name: cartItemId
          in: path
          description: ''
          required: true
          example: 6895fce64022cb63f8bb215d
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_3
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6895f6c56f316d777c040209
                  userId: 6895f6c56f316d777c040207
                  totalPrice: 45000
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fc9d4022cb63f8bb2155
                    - menuId: 6889e187ef13a242d64af679
                      temperature: cold
                      iceLevel: regular_ice
                      variant: regular
                      price: 15000
                      quantity: 1
                      _id: 6895fce64022cb63f8bb215d
                  createdAt: '2025-08-08T13:08:21.777Z'
                  updatedAt: '2025-08-08T13:50:02.148Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Cart item not found
          headers: {}
      security:
        - bearer: []
  /api/v1/cart/delete/item/{cartItemId}:
    delete:
      summary: Delete Cart Item
      deprecated: false
      description: ''
      tags:
        - Cart
      parameters:
        - name: cartItemId
          in: path
          description: ''
          required: true
          example: 6895fce64022cb63f8bb215d
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_3
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6895f6c56f316d777c040209
                  userId: 6895f6c56f316d777c040207
                  totalPrice: 30000
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                      _id: 6895fc9d4022cb63f8bb2155
                  createdAt: '2025-08-08T13:08:21.777Z'
                  updatedAt: '2025-08-08T13:52:07.682Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Cart item not found
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/add:
    post:
      summary: Create Order
      deprecated: false
      description: 'Role : customer'
      tags:
        - Order
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                outletId:
                  type: string
                orderType:
                  type: string
                deliveryFee:
                  type: integer
              required:
                - outletId
                - orderType
                - deliveryFee
            example:
              outletId: 686bbade9ad15a09ecaae0e2
              orderType: delivery
              deliveryFee: 12000
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_4
                    $ref: '#/components/schemas/Order'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  userId: 6895f6c56f316d777c040207
                  outletId: 686bbade9ad15a09ecaae0e2
                  orderType: delivery
                  deliveryFee: 12000
                  status: pending
                  _id: 6896161bdb7545fae208f690
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                  totalPrice: 42000
                  createdAt: '2025-08-08T15:22:04.264Z'
                  updatedAt: '2025-08-08T15:22:04.264Z'
          headers: {}
        '400':
          description: Delivery fee must be 0 for pick-up and dine in order
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: '''deliveryFee'' must be 0 for ''pick-up'' orders, but got 12000'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Cart is empty
          headers: {}
        x-400-2:
          description: Delivery fee must be greater than 0 if order type is delivery
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: '''deliveryFee'' must be more than 0 for ''delivery'' orders'
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/user/orders:
    get:
      summary: Get User Orders
      deprecated: false
      description: 'Role : customer'
      tags:
        - Order
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_4
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  - _id: 6896161bdb7545fae208f690
                    userId: 6895f6c56f316d777c040207
                    outletId: 686bbade9ad15a09ecaae0e2
                    orderType: delivery
                    deliveryFee: 12000
                    status: pending
                    items:
                      - menuId: 6889de6dcdf79b72717f3651
                        temperature: hot
                        iceLevel: no_ice
                        variant: regular
                        price: 15000
                        quantity: 2
                    totalPrice: 42000
                    createdAt: '2025-08-08T15:22:04.264Z'
                    updatedAt: '2025-08-08T15:22:04.264Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: User not order yet
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/order/{orderId}:
    get:
      summary: Get Order By Id
      deprecated: false
      description: 'Role : customer, admin'
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          example: 6896161bdb7545fae208f690
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_4
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 6896161bdb7545fae208f690
                  userId: 6895f6c56f316d777c040207
                  outletId: 686bbade9ad15a09ecaae0e2
                  orderType: delivery
                  deliveryFee: 12000
                  status: pending
                  items:
                    - menuId: 6889de6dcdf79b72717f3651
                      temperature: hot
                      iceLevel: no_ice
                      variant: regular
                      price: 15000
                      quantity: 2
                  totalPrice: 42000
                  createdAt: '2025-08-08T15:22:04.264Z'
                  updatedAt: '2025-08-08T15:22:04.264Z'
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/:
    get:
      summary: Get All Orders
      deprecated: false
      description: 'Role : admin'
      tags:
        - Order
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_4
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  - _id: 6896161bdb7545fae208f690
                    userId: 6895f6c56f316d777c040207
                    outletId: 686bbade9ad15a09ecaae0e2
                    orderType: delivery
                    deliveryFee: 12000
                    status: pending
                    items:
                      - menuId: 6889de6dcdf79b72717f3651
                        temperature: hot
                        iceLevel: no_ice
                        variant: regular
                        price: 15000
                        quantity: 2
                    totalPrice: 42000
                    createdAt: '2025-08-08T15:22:04.264Z'
                    updatedAt: '2025-08-08T15:22:04.264Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Order not found
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/update/status:
    patch:
      summary: Update Order Status
      deprecated: false
      description: 'Role : customer, staff'
      tags:
        - Order
      parameters:
        - name: orderId
          in: query
          description: ''
          required: true
          example: 6896161bdb7545fae208f690
          schema:
            type: string
        - name: orderStatus
          in: query
          description: ''
          required: true
          example: completed
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data: null
          headers: {}
        '401':
          description: |-
            Staff can't update status to pending.
            Customer only can update status to cancelled.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: string
                required:
                  - errors
              example:
                errors: Unauthorized
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/user/{userId}:
    get:
      summary: Get Orders By User Id
      deprecated: false
      description: 'Role : admin'
      tags:
        - Order
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          example: 6895f6c56f316d777c040207
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_4
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  - _id: 6896161bdb7545fae208f690
                    userId: 6895f6c56f316d777c040207
                    outletId: 686bbade9ad15a09ecaae0e2
                    orderType: delivery
                    deliveryFee: 12000
                    status: completed
                    items:
                      - menuId: 6889de6dcdf79b72717f3651
                        temperature: hot
                        iceLevel: no_ice
                        variant: regular
                        price: 15000
                        quantity: 2
                    totalPrice: 42000
                    createdAt: '2025-08-08T15:22:04.264Z'
                    updatedAt: '2025-08-09T07:29:41.798Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: The user has not placed an order yet
          headers: {}
      security:
        - bearer: []
  /api/v1/orders/outlet/{outletId}:
    get:
      summary: Get Orders By Outlet Id
      deprecated: false
      description: ''
      tags:
        - Order
      parameters:
        - name: outletId
          in: path
          description: ''
          required: true
          example: 686bbade9ad15a09ecaae0e2
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_4
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  - _id: 6896161bdb7545fae208f690
                    userId: 6895f6c56f316d777c040207
                    outletId: 688dedf51ae112a3e84a8e16
                    orderType: delivery
                    deliveryFee: 12000
                    status: completed
                    items:
                      - menuId: 6889de6dcdf79b72717f3651
                        temperature: hot
                        iceLevel: no_ice
                        variant: regular
                        price: 15000
                        quantity: 2
                    totalPrice: 42000
                    createdAt: '2025-08-08T15:22:04.264Z'
                    updatedAt: '2025-08-09T07:29:41.798Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: The outlet does not have any orders yet
          headers: {}
      security:
        - bearer: []
  /api/v1/payments/add:
    post:
      summary: Add Payment
      deprecated: false
      description: ''
      tags:
        - Payment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                amount:
                  type: integer
                paymentMethod:
                  type: string
              required:
                - orderId
                - amount
                - paymentMethod
            example:
              orderId: 6896161bdb7545fae208f690
              amount: 57000
              paymentMethod: qris
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: &ref_5
                    $ref: '#/components/schemas/Payment'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  userId: 6895f6c56f316d777c040207
                  orderId: 6896161bdb7545fae208f690
                  amount: 57000
                  paymentMethod: qris
                  paymentReceipt: null
                  status: unpaid
                  _id: 689dc6fb5e50fb3f848ba900
                  paymentUrl: https://www.paymentgateway.com/payment/example
                  expiresAt: '2025-08-14T14:22:35.347Z'
                  createdAt: '2025-08-14T11:22:35.355Z'
                  updatedAt: '2025-08-14T11:22:35.355Z'
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Order not found
          headers: {}
        '409':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Payment is already created
          headers: {}
      security:
        - bearer: []
  /api/v1/payments/update/status:
    patch:
      summary: Update Payment Status
      deprecated: false
      description: ''
      tags:
        - Payment
      parameters:
        - name: orderId
          in: query
          description: ''
          required: true
          example: 6896161bdb7545fae208f690
          schema:
            type: string
        - name: paymentStatus
          in: query
          description: ''
          required: true
          example: paid
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                amount:
                  type: integer
                paidAt:
                  type: string
              required:
                - transactionId
                - amount
                - paidAt
            example:
              transactionId: txn68848cc06bc4d8143ffd4f7d
              amount: 42000
              paidAt: '2025-07-26T08:38:00.143Z'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: 'null'
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data: null
          headers: {}
        '400':
          description: >-
            Throws an error when the request body is not sent during the status
            update to paid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Payment receipt is required
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Payment not found
          headers: {}
        '409':
          description: Throws an error when payment status is already updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Payment status already updated
          headers: {}
      security:
        - bearer: []
  /api/v1/payments/:
    get:
      summary: Get All Payment
      deprecated: false
      description: ''
      tags:
        - Payment
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items: *ref_5
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  - _id: 689dc6fb5e50fb3f848ba900
                    userId: 6895f6c56f316d777c040207
                    orderId: 6896161bdb7545fae208f690
                    amount: 57000
                    paymentMethod: qris
                    paymentReceipt: null
                    status: unpaid
                    paymentUrl: https://www.paymentgateway.com/payment/example
                    expiresAt: '2025-08-14T14:22:35.347Z'
                    createdAt: '2025-08-14T11:22:35.355Z'
                    updatedAt: '2025-08-14T11:22:35.355Z'
          headers: {}
      security:
        - bearer: []
  /api/v1/payments/order/{orderId}:
    get:
      summary: Get Payment By Order Id
      deprecated: false
      description: ''
      tags:
        - Payment
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          example: 6896161bdb7545fae208f690
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: *ref_5
                required:
                  - success
                  - message
                  - data
              example:
                success: true
                message: Success!
                data:
                  _id: 689dc6fb5e50fb3f848ba900
                  userId: 6895f6c56f316d777c040207
                  orderId: 6896161bdb7545fae208f690
                  amount: 57000
                  paymentMethod: qris
                  paymentReceipt: null
                  status: unpaid
                  paymentUrl: https://www.paymentgateway.com/payment/example
                  expiresAt: '2025-08-14T14:22:35.347Z'
                  createdAt: '2025-08-14T11:22:35.355Z'
                  updatedAt: '2025-08-14T11:22:35.355Z'
          headers: {}
        '401':
          description: >-
            Throws an error if :

            1. The payment is not associated with the logged-in customer

            2. The payment is not associated with an order placed at the outlet
            where the staff member works
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Unauthorized
          headers: {}
        '404':
          description: ''
          content:
            application/json:
              schema:
                title: ''
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - success
                  - errors
              example:
                success: false
                errors:
                  message: Payment not found
          headers: {}
      security:
        - bearer: []
webhooks: {}
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID
        name:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        location:
          type:
            - object
            - 'null'
          properties:
            alamat:
              type: string
            kecamatan:
              type: string
            kelurahan:
              type: string
            kota:
              type: string
          required:
            - alamat
            - kecamatan
            - kelurahan
            - kota
        role:
          type: string
          enum:
            - customer
            - staff
            - admin
          description: 'Enum: [''admin'', ''staff'', ''customer'']'
        isVerified:
          type: boolean
        refreshToken:
          type:
            - string
            - 'null'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - email
        - password
        - phone
        - role
        - createdAt
        - updatedAt
    Cart:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        items:
          type: object
          properties:
            _id:
              type: string
            menuId:
              type: string
            iceLevel:
              type: string
              description: 'Enum : [''no_ice'',  ''less_ice'',  ''regular_ice'']'
              enum:
                - no_ice
                - less_ice
                - regular_ice
            variant:
              type: string
              description: 'Enum : [''small,  ''regular'',  ''large'']'
              enum:
                - small
                - regular
                - large
            price:
              type: integer
            quantity:
              type: integer
          required:
            - _id
            - menuId
            - iceLevel
            - variant
            - price
            - quantity
        totalPrice:
          type: integer
          description: 'Default : 0'
        createdAt:
          type: string
          format: date-time
        updateAt:
          type: string
          format: date-time
      required:
        - userId
        - _id
        - createdAt
        - updateAt
    Menu:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        isAvailable:
          type: string
        images:
          type: object
          properties:
            url:
              type: string
            publicId:
              type: string
          required:
            - url
            - publicId
          description: 'Default : []'
        variants:
          type: object
          properties:
            size:
              type: string
            price:
              type: integer
          required:
            - size
            - price
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - category
        - isAvailable
        - _id
        - variants
        - description
        - createdAt
        - updatedAt
    Order:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        outletId:
          type: string
        items:
          type: object
          properties:
            menuId:
              type: string
            temperature:
              type: string
              description: 'Enum : [''hot'', ''cold'']'
              enum:
                - hot
                - cold
            iceLevel:
              type: string
              description: 'Enum : [''no_ice'',  ''less_ice'',  ''regular_ice'']'
              enum:
                - no_ice
                - less_ice
                - regular_ice
            variant:
              type: string
              description: 'Enum : [''small,  ''regular'',  ''large'']'
              enum:
                - small
                - regular
                - large
            price:
              type: integer
            quantity:
              type: integer
          required:
            - menuId
            - iceLevel
            - temperature
            - quantity
            - price
            - variant
        orderType:
          type: string
          description: 'Enum : [''delivery'', ''pick_up'', ''dine_in'']'
          enum:
            - delivery
            - pick_up
            - dine_in
        deliveryFee:
          type: integer
        totalPrice:
          type: integer
        status:
          type: string
          description: >-
            Enum : ['pending', 'in_progress', 'on_delivery', 'cancelled',
            'completed']
          enum:
            - pending
            - in_progress
            - on_delivery
            - cancelled
            - completed
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - userId
        - outletId
        - items
        - orderType
        - deliveryFee
        - totalPrice
        - status
        - _id
        - createdAt
        - updatedAt
    Outlet:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        location:
          type: object
          properties:
            alamat:
              type: string
            kecamatan:
              type: string
            kelurahan:
              type: string
          required:
            - alamat
            - kecamatan
            - kelurahan
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              publicId:
                type: string
            required:
              - url
              - publicId
        openingHours:
          type: object
          properties:
            open:
              type: string
              description: 'Format : hh.ss'
            close:
              type: string
              description: 'Format : hh.ss'
          required:
            - open
            - close
        staff:
          type: array
          items:
            type: object
            properties:
              staffId:
                type: string
              isActive:
                type: boolean
            required:
              - staffId
              - isActive
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - isActive
        - openingHours
        - location
        - _id
        - createdAt
        - updatedAt
    Payment:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        orderId:
          type: string
        amount:
          type: integer
        paymentMethod:
          type: string
          enum:
            - gopay
            - cash
            - dana
            - qris
          description: 'Enum: [''gopay'', ''cash'', ''dana'', ''qris'']'
        paymentReceipt:
          type:
            - object
            - 'null'
          properties:
            transactionId:
              type: string
            amount:
              type: number
            paidAt:
              type: string
              format: date-time
          required:
            - transactionId
            - amount
            - paidAt
        status:
          type: string
          enum:
            - unpaid
            - paid
            - expired
            - cancelled
          description: 'Enum: [''unpaid'', ''paid'', ''expired'', ''cancelled'']'
        paymentUrl:
          type: string
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - _id
        - userId
        - orderId
        - amount
        - paymentMethod
        - paymentReceipt
        - status
        - paymentUrl
        - expiresAt
        - createdAt
        - updatedAt
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
servers:
  - url: http://localhost:3000
    description: Testing Env
  - url: https://coffee-shop-api-blue.vercel.app/
    description: Prod Env
